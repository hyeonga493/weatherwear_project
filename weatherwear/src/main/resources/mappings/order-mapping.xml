<?xml version="1.0" encoding="UTF-8"?>

<!-- MyBatis 다운 파일 PDF 에서 붙여넣은 내용입니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
				
<!-- MySQL 에 테스트용 테이블 order 테이블 CRUD SQL문 작성-->

<!-- mapper를 루트 엘리먼트로 사용합니다. -->
<mapper namespace="OrderDAO">
	
	<!-- resultMap
  		- select 한 결과가 조인과 같은 효과로 필드명과 컬럼이 다른 경우에 사용합니다.
  		- sequence는 id로 주어야 합니다.
  		
  		result property="변수이름" column="컬럼명"
		 작성한 Java 파일과 데이터베이스 컬럼명과 다를 경우 매칭하는 태그입니다.
		<resultMap id="list에서 호출할 이름" type="typeAlias 에서 지정한 빈 이름">
			<result property="VO에서 작성한 멤버 변수 이름" column="데이터베이스에서 지정한 컬럼 이름" />
		</resultMap>
	 -->
	 <!-- -->
	<resultMap type="orderVO" id="orderVO">
		<id property="odid" column="odid"/><!-- pk에 사용 --> 
		
		<result property="clientId" column="cid"/><!-- orders에는 소문자인 cid로 생성되어있음 -->
		<result property="clientNum" column="cNum"/>
		<result property="clientEmail" column="cEmail"/>
		<result property="clientName" column="cName"/>
		
		
		<result property="pmId" column="pmId"/> 
		<result property="proId" column="proId"/> 
		<result property="proName" column="proName"/> 
		<result property="proPrice" column="proPrice"/> 

		
		<result property="odProList" column="odProList"/> 
		<result property="opId" column="opId"/> 
		<result property="odProCnt" column="odProCnt"/> 
		<result property="odStatus" column="odStatus"/>
		<result property="odPrice" column="odPrice"/> 
		<result property="odDate" column="odDate"/> 

		<result property="odTotal" column="odTotal"/> 
		<result property="cpId" column="cpId"/> 

		
		<result property="deliId" column="deliId"/> 
		<result property="deliNum" column="deliNum"/> 
		<result property="deliPrice" column="deliPrice"/> 


		<result property="addId" column="addId"/> 
		<result property="addName" column="addName"/> 
		<result property="addNum" column="addNum"/> 
		<result property="addPostNum" column="addPostNum"/> 
		<result property="address1" column="address1"/> 
		<result property="address2" column="address2"/> 
		<result property="addMemo" column="addMemo"/> 
		<result property="addBase" column="addBase"/> 
	</resultMap>
	 
	 
	 
	<!-- id : DAO에서 호출하는 이름 -->
	<!-- parameterType : 구문에서 인자로 넘어오는 데이터 타입 -->
		<!-- #{} 받아온 데이터가 getter가 있는 경우 멤버변수나 키 값을 이용하여 값을 저장 -->
	<!-- resultMap : 반환 레코드를 저장합니다. -->
		<!-- setter가 존재하는 경우 멤버 변수의 이름과 일치하는 컬럼명의 데이터를 반환 -->
		<!-- $ : 보안상의 이유가 있으므로 인젝션을 하는 경우 문제가 발생할 수 있음 -->
		<!-- # : 타입에 맞춰 ""로 감싼 값이 출력 -->
    
    <!-- id를 사용하여 DAO에서 호출합니다. resultMap에 반환 레코드를 저장합니다. --> 
<!-- 데이터 삽입 
		mybatis-config.xml 파일에서 alias를 test로 작성함  -->
     <!-- 특수문자는 태그로 감싸야하므로 특수문자가 들어가는 경우 <! [CDATA[ SQL문 ]] >  -->
        <!-- opId를 카트에 추가해야 할 듯? -->
        <!-- 데이터 삽입 시 자꾸 2개씩 들어가서 INSERT IGNORE INTO 사용 -->
        
    <!-- insert 나중에 -->    



<!-- 데이터 목록 조회 --> 
	


 
</mapper>